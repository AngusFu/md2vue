// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transforms markdown file correctly 1`] = `
"<template>
<article class=\\"markdown-body\\">
<h1><a href=\\"https://github.com/AngusFu/md2vue\\">md2vue</a></h1>
<h2>说明</h2>
<p>最初灵感来自 <a href=\\"https://nuxtjs.org\\">nuxt</a>。</p>
<blockquote>
<p>Markdown is a lightweight markup language with plain text formatting syntax. It is designed so that it can be converted to HTML and many other formats using a tool by the same name. —— <a href=\\"https://en.wikipedia.org/wiki/Markdown\\">wikipedia</a></p>
</blockquote>
<h2>devDependencies</h2>
<ul>
<li><a href=\\"/remarkjs/remark\\">remark</a>: Remark is an ecosystem of plugins for processing markdown.</li>
<li><a href=\\"https://github.com/isagalaev/highlight.js\\">highlight.js</a>: Javascript syntax highlighter.</li>
<li><a href=\\"https://github.com/PrismJS/prism\\">prism</a>: Javascript syntax highlighter.</li>
<li><a href=\\"https://github.com/vuejs/vueify\\">vueify</a>: Browserify transform for single-file Vue components</li>
<li><a href=\\"https://github.com/rollup/rollup\\">rollup</a>: Next-generation ES6 module bundler.</li>
<li><a href=\\"https://buble.surge.sh/\\">buble</a>: The blazing fast, batteries-included ES2015 compiler.</li>
</ul>
<h2>Typography &#x26; UI</h2>
<ul>
<li><a href=\\"https://github.com/sindresorhus/github-markdown-css\\">github-markdown-css</a>: The minimal amount of CSS to replicate the GitHub Markdown style.</li>
<li><a href=\\"https://github.com/isagalaev/highlight.js\\">highlight.js</a>: Code highlighting.</li>
<li><a href=\\"https://github.com/PrismJS/prism\\">prism</a>: Code highlighting.</li>
</ul>
<h2>使用</h2>
<p>API 相当简单。直接看代码即可：</p>
<pre v-pre class=\\"lang-javascript\\"><code><span class=\\"token keyword\\">import</span> md2vue <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'md2vue'</span>

<span class=\\"token comment\\">// markdown 文本</span>
<span class=\\"token keyword\\">const</span> markdownText <span class=\\"token operator\\">=</span> <span class=\\"token template-string\\"><span class=\\"token string\\">\`...\`</span></span>

<span class=\\"token comment\\">// 配置</span>
<span class=\\"token keyword\\">const</span> config <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>
  target<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'js'</span><span class=\\"token punctuation\\">,</span>
  name<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'common-comp'</span><span class=\\"token punctuation\\">,</span>
  highlight<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'prism'</span><span class=\\"token punctuation\\">,</span>
  inject<span class=\\"token punctuation\\">,</span>
  extend
<span class=\\"token punctuation\\">}</span>

<span class=\\"token comment\\">// 返回 promise</span>
<span class=\\"token keyword\\">const</span> content <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> <span class=\\"token function\\">md2vue</span><span class=\\"token punctuation\\">(</span>markdownText<span class=\\"token punctuation\\">,</span> config<span class=\\"token punctuation\\">)</span></code></pre>
<h2>配置字段</h2>
<h4><code>config.target</code></h4>
<p>字符串。可选址值为 <code>vue</code> <code>js</code>。默认为 <code>vue</code>。</p>
<p>使用 <code>vue</code> 时，生成结果是一个 SFC（single file component）。这种情况下，你可以将内容写入到一个 <code>.vue</code> 文件中。</p>
<p>使用 <code>js</code> 时，则会进一步将 SFC 编译为 JavaScript。你可以将结果写到一个 <code>.js</code> 文件中，并像下面这样引用：</p>
<pre v-pre class=\\"lang-javascript\\"><code><span class=\\"token keyword\\">const</span> MyComponent <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'my-component.js'</span><span class=\\"token punctuation\\">)</span>

Vue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span>MyComponent<span class=\\"token punctuation\\">)</span>

<span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Vue</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>
  el<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'#app'</span><span class=\\"token punctuation\\">,</span>
  template<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'&lt;common-comp />'</span>
<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span></code></pre>
<h4><code>config.name</code></h4>
<p>字符串类型。注意，当 target 字段为 <code>js</code> 时，必须配置此字段，表示 Vue 组件名称。</p>
<h4><code>config.highlight</code></h4>
<p>使用何种工具进行代码高亮处理。</p>
<p>可选值 <code>highlight.js</code> <code>prism</code>。默认为 <code>highlight.js</code>。</p>
<p>当然，也可以传入一个函数，该函数接收两个参数：<code>code</code>, <code>language</code></p>
<h4><code>config.inject</code></h4>
<p>字符串或函数。将会插入到文档的可运行 demo 与源码之间。</p>
<h4><code>config.extend</code></h4>
<p>其他可以提供给 Vue 文档的内容，请传入 Plain Object。 下面的例子就插入了一个生命周期函数：</p>
<pre v-pre class=\\"lang-javascript\\"><code>extend<span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">{</span>
  <span class=\\"token function\\">created</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>
    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'created...'</span><span class=\\"token punctuation\\">)</span>
  <span class=\\"token punctuation\\">}</span>
<span class=\\"token punctuation\\">}</span></code></pre>
<h4><code>config.remarkPlugins</code></h4>
<p>从 v4.0 开始，md2vue 采用 remark 作为 markdown 转换工具。</p>
<p><code>config.remarkPlugins</code> 为数组，其中每个元素都是一个 remark 插件函数。</p>
<h2>说明</h2>
<ol>
<li>
<p>所有语言类型设置为 <code>html</code> 的代码块将会被视为可运行的 Vue demo</p>
</li>
<li>
<p>如果你真的只是需要展示代码，请将语言设置为 <code>xml</code></p>
</li>
</ol>
<h2>演示</h2>
<p>下面的代码将会渲染出可以运行的 demo：（当然，前提是你必须自行安装 stylus 和 pug 依赖）</p>

<div class=\\"vue-demo-block\\">
<md2vuedemo0></md2vuedemo0>
<input id=\\"vue-demo-1333\\" type=\\"checkbox\\" /><label for=\\"vue-demo-1333\\"></label>
<pre v-pre class=\\"lang-html\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>style</span> <span class=\\"token attr-name\\">lang</span><span class=\\"token attr-value\\"><span class=\\"token punctuation\\">=</span><span class=\\"token punctuation\\">\\"</span>stylus<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">></span></span><span class=\\"token style language-css\\">
.wrapper
  input
    <span class=\\"token property\\">width</span><span class=\\"token punctuation\\">:</span> 50px<span class=\\"token punctuation\\">;</span>
    <span class=\\"token property\\">text-align</span><span class=\\"token punctuation\\">:</span> center<span class=\\"token punctuation\\">;</span>
</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>style</span><span class=\\"token punctuation\\">></span></span>

<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>template</span> <span class=\\"token attr-name\\">lang</span><span class=\\"token attr-value\\"><span class=\\"token punctuation\\">=</span><span class=\\"token punctuation\\">\\"</span>pug<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">></span></span>
.wrapper
  button(@click=\\"incr(-1)\\") -
  input(type=\\"text\\", readonly, :value=\\"count\\")
  button(@click=\\"incr(+1)\\") +
<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>template</span><span class=\\"token punctuation\\">></span></span>

<span class=\\"token comment\\">&lt;!--默认使用 buble 编译 JS--></span>
<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>script</span> <span class=\\"token attr-name\\">lang</span><span class=\\"token attr-value\\"><span class=\\"token punctuation\\">=</span><span class=\\"token punctuation\\">\\"</span>buble<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">></span></span><span class=\\"token script language-javascript\\">
<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> <span class=\\"token punctuation\\">{</span>
  <span class=\\"token function\\">data</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>
    <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>
      count<span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">0</span>
    <span class=\\"token punctuation\\">}</span>
  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>
  methods<span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">{</span>
    <span class=\\"token function\\">incr</span><span class=\\"token punctuation\\">(</span>delta<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>
      <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>count <span class=\\"token operator\\">+=</span> delta
    <span class=\\"token punctuation\\">}</span>
  <span class=\\"token punctuation\\">}</span>
<span class=\\"token punctuation\\">}</span>
</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>script</span><span class=\\"token punctuation\\">></span></span></code></pre>
</div>

<p>其实也可以偷懒，不写 <code>&#x3C;template></code> 也是可以的。（这时候，template 的内容就是去掉 style 和 script 两部分之后剩余的内容。）示例如下：</p>

<div class=\\"vue-demo-block\\">
<md2vuedemo1></md2vuedemo1>
<input id=\\"vue-demo-1334\\" type=\\"checkbox\\" /><label for=\\"vue-demo-1334\\"></label>
<pre v-pre class=\\"lang-html\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>style</span><span class=\\"token punctuation\\">></span></span><span class=\\"token style language-css\\">
  <span class=\\"token selector\\">button</span> <span class=\\"token punctuation\\">{</span>
    <span class=\\"token property\\">font-size</span><span class=\\"token punctuation\\">:</span> 14px<span class=\\"token punctuation\\">;</span>
  <span class=\\"token punctuation\\">}</span>
</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>style</span><span class=\\"token punctuation\\">></span></span>

<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>button</span> <span class=\\"token attr-name\\">@click</span><span class=\\"token attr-value\\"><span class=\\"token punctuation\\">=</span><span class=\\"token punctuation\\">\\"</span>click<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">></span></span>click me!<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>button</span><span class=\\"token punctuation\\">></span></span>

<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>script</span><span class=\\"token punctuation\\">></span></span><span class=\\"token script language-javascript\\">
  <span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> <span class=\\"token punctuation\\">{</span>
    methods<span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">{</span>
      <span class=\\"token function\\">click</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>
        <span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'clicked!'</span><span class=\\"token punctuation\\">)</span>
      <span class=\\"token punctuation\\">}</span>
    <span class=\\"token punctuation\\">}</span>
  <span class=\\"token punctuation\\">}</span>
</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>script</span><span class=\\"token punctuation\\">></span></span></code></pre>
</div>

<p>问题来了，假如我真的只是想在页面中插入一个可交互的 tiny app，而不想展示源码，该怎么办？</p>
<p>这时候，可以像下面一样，为 <code>&#x3C;template></code> 添加一个 <code>demo-only</code> 属性。</p>
<pre v-pre class=\\"lang-xml\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>style</span><span class=\\"token punctuation\\">></span></span><span class=\\"token style language-css\\">
  <span class=\\"token selector\\">button</span> <span class=\\"token punctuation\\">{</span>
    <span class=\\"token property\\">font-size</span><span class=\\"token punctuation\\">:</span> 14px<span class=\\"token punctuation\\">;</span>
  <span class=\\"token punctuation\\">}</span>
</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>style</span><span class=\\"token punctuation\\">></span></span>

<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>template</span> <span class=\\"token attr-name\\">demo-only</span><span class=\\"token punctuation\\">></span></span>
  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>button</span> <span class=\\"token attr-name\\">@click</span><span class=\\"token attr-value\\"><span class=\\"token punctuation\\">=</span><span class=\\"token punctuation\\">\\"</span>click<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">></span></span>click me!<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>button</span><span class=\\"token punctuation\\">></span></span>
<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>template</span><span class=\\"token punctuation\\">></span></span>

<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>script</span><span class=\\"token punctuation\\">></span></span><span class=\\"token script language-javascript\\">
  <span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> <span class=\\"token punctuation\\">{</span>
    methods<span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">{</span>
      <span class=\\"token function\\">click</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>
        <span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'clicked!'</span><span class=\\"token punctuation\\">)</span>
      <span class=\\"token punctuation\\">}</span>
    <span class=\\"token punctuation\\">}</span>
  <span class=\\"token punctuation\\">}</span>
</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>script</span><span class=\\"token punctuation\\">></span></span></code></pre>
<p>效果如下：</p>

<div class=\\"vue-demo-block vue-demo-block-demo-only\\">
<md2vuedemo2></md2vuedemo2>


</div>

</article >
</template>

<script lang=\\"buble\\">
var md2vuedemo0 = {};
(function () {
  var _$0 = this;

  var _4 = function () {
    return {
      count: 0
    };
  };

  var _5 = function (delta) {
    this.count += delta;
  };

  var _6 = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('div', {
      staticClass: \\"vue-demo\\"
    }, [_c('div', {
      staticClass: \\"wrapper\\"
    }, [_c('button', {
      on: {
        \\"click\\": function ($event) {
          _vm.incr(-1);
        }
      }
    }, [_vm._v(\\"-\\")]), _c('input', {
      attrs: {
        \\"type\\": \\"text\\",
        \\"readonly\\": \\"readonly\\"
      },
      domProps: {
        \\"value\\": _vm.count
      }
    }), _c('button', {
      on: {
        \\"click\\": function ($event) {
          _vm.incr(+1);
        }
      }
    }, [_vm._v(\\"+\\")])])]);
  };

  var _1 = {
    incr: _5
  };
  var _2 = [];
  var _0 = {
    data: _4,
    methods: _1,
    render: _6,
    staticRenderFns: _2,
    _scopeId: \\"data-v-029571ac\\"
  };
  _$0.md2vuedemo0 = _0;

}).call(md2vuedemo0);

md2vuedemo0 = md2vuedemo0.md2vuedemo0;

var md2vuedemo1 = {};
(function () {
  var _$0 = this;

  var _4 = function () {
    alert('clicked!');
  };

  var _5 = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('div', {
      staticClass: \\"vue-demo\\"
    }, [_c('button', {
      on: {
        \\"click\\": _vm.click
      }
    }, [_vm._v(\\"click me!\\")])]);
  };

  var _1 = {
    click: _4
  };
  var _2 = [];
  var _0 = {
    methods: _1,
    render: _5,
    staticRenderFns: _2,
    _scopeId: \\"data-v-029571ad\\"
  };
  _$0.md2vuedemo1 = _0;

}).call(md2vuedemo1);

md2vuedemo1 = md2vuedemo1.md2vuedemo1;

var md2vuedemo2 = {};
(function () {
  var _$0 = this;

  var _4 = function () {
    alert('clicked!');
  };

  var _5 = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('div', {
      staticClass: \\"vue-demo\\"
    }, [_c('button', {
      on: {
        \\"click\\": _vm.click
      }
    }, [_vm._v(\\"click me!\\")])]);
  };

  var _1 = {
    click: _4
  };
  var _2 = [];
  var _0 = {
    methods: _1,
    render: _5,
    staticRenderFns: _2,
    _scopeId: \\"data-v-029571ae\\"
  };
  _$0.md2vuedemo2 = _0;

}).call(md2vuedemo2);

md2vuedemo2 = md2vuedemo2.md2vuedemo2;

module.exports = {
  head: function anonymous() {
    return { title: 'foo' };
  },
  layout: 'component',
  directives: {
    'effect-only': {
      inserted: function inserted(el) {
        console.log(el);
      }
    }
  }
};

module.exports.components = {
  'md2vuedemo0': md2vuedemo0,
  'md2vuedemo1': md2vuedemo1,
  'md2vuedemo2': md2vuedemo2
}
</script>

<style>
.wrapper input[data-v-029571ac] {
  width: 50px;
  text-align: center;
}
button[data-v-029571ad] {
  font-size: 14px;
}
button[data-v-029571ae] {
  font-size: 14px;
}
</style>
"
`;

exports[`transforms markdown file correctly 2`] = `
"var __proxy = {};
(function () {
  var _$1 = this;

  var _R = function () {
    return {
      count: 0
    };
  };

  var _S = function (delta) {
    this.count += delta;
  };

  var _T = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('div', {
      staticClass: \\"vue-demo\\"
    }, [_c('div', {
      staticClass: \\"wrapper\\"
    }, [_c('button', {
      on: {
        \\"click\\": function ($event) {
          _vm.incr(-1);
        }
      }
    }, [_vm._v(\\"-\\")]), _c('input', {
      attrs: {
        \\"type\\": \\"text\\",
        \\"readonly\\": \\"readonly\\"
      },
      domProps: {
        \\"value\\": _vm.count
      }
    }), _c('button', {
      on: {
        \\"click\\": function ($event) {
          _vm.incr(+1);
        }
      }
    }, [_vm._v(\\"+\\")])])]);
  };

  var _U = function () {
    alert('clicked!');
  };

  var _V = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('div', {
      staticClass: \\"vue-demo\\"
    }, [_c('button', {
      on: {
        \\"click\\": _vm.click
      }
    }, [_vm._v(\\"click me!\\")])]);
  };

  var _W = function () {
    alert('clicked!');
  };

  var _X = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('div', {
      staticClass: \\"vue-demo\\"
    }, [_c('button', {
      on: {
        \\"click\\": _vm.click
      }
    }, [_vm._v(\\"click me!\\")])]);
  };

  var _P = function () {
    return {
      title: 'foo'
    };
  };

  var _Q = function (el) {
    console.log(el);
  };

  var _Y = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('article', {
      staticClass: \\"markdown-body\\"
    }, [_vm._m(0), _vm._v(\\" \\"), _c('h2', [_vm._v(\\"说明\\")]), _vm._v(\\" \\"), _vm._m(1), _vm._v(\\" \\"), _vm._m(2), _vm._v(\\" \\"), _c('h2', [_vm._v(\\"devDependencies\\")]), _vm._v(\\" \\"), _vm._m(3), _vm._v(\\" \\"), _c('h2', [_vm._v(\\"Typography & UI\\")]), _vm._v(\\" \\"), _vm._m(4), _vm._v(\\" \\"), _c('h2', [_vm._v(\\"使用\\")]), _vm._v(\\" \\"), _c('p', [_vm._v(\\"API 相当简单。直接看代码即可：\\")]), _vm._v(\\" \\"), _vm._m(5), _vm._v(\\" \\"), _c('h2', [_vm._v(\\"配置字段\\")]), _vm._v(\\" \\"), _vm._m(6), _vm._v(\\" \\"), _vm._m(7), _vm._v(\\" \\"), _vm._m(8), _vm._v(\\" \\"), _vm._m(9), _vm._v(\\" \\"), _vm._m(10), _vm._v(\\" \\"), _vm._m(11), _vm._v(\\" \\"), _vm._m(12), _vm._v(\\" \\"), _vm._m(13), _vm._v(\\" \\"), _c('p', [_vm._v(\\"使用何种工具进行代码高亮处理。\\")]), _vm._v(\\" \\"), _vm._m(14), _vm._v(\\" \\"), _vm._m(15), _vm._v(\\" \\"), _vm._m(16), _vm._v(\\" \\"), _c('p', [_vm._v(\\"字符串或函数。将会插入到文档的可运行 demo 与源码之间。\\")]), _vm._v(\\" \\"), _vm._m(17), _vm._v(\\" \\"), _c('p', [_vm._v(\\"其他可以提供给 Vue 文档的内容，请传入 Plain Object。 下面的例子就插入了一个生命周期函数：\\")]), _vm._v(\\" \\"), _vm._m(18), _vm._v(\\" \\"), _vm._m(19), _vm._v(\\" \\"), _c('p', [_vm._v(\\"从 v4.0 开始，md2vue 采用 remark 作为 markdown 转换工具。\\")]), _vm._v(\\" \\"), _vm._m(20), _vm._v(\\" \\"), _c('h2', [_vm._v(\\"说明\\")]), _vm._v(\\" \\"), _vm._m(21), _vm._v(\\" \\"), _c('h2', [_vm._v(\\"演示\\")]), _vm._v(\\" \\"), _c('p', [_vm._v(\\"下面的代码将会渲染出可以运行的 demo：（当然，前提是你必须自行安装 stylus 和 pug 依赖）\\")]), _vm._v(\\" \\"), _c('div', {
      staticClass: \\"vue-demo-block\\"
    }, [_c('md2vuedemo0'), _vm._v(\\" \\"), _c('input', {
      attrs: {
        \\"id\\": \\"vue-demo-1335\\",
        \\"type\\": \\"checkbox\\"
      }
    }), _c('label', {
      attrs: {
        \\"for\\": \\"vue-demo-1335\\"
      }
    }), _vm._v(\\" \\"), _vm._m(22)], 1), _vm._v(\\" \\"), _vm._m(23), _vm._v(\\" \\"), _c('div', {
      staticClass: \\"vue-demo-block\\"
    }, [_c('md2vuedemo1'), _vm._v(\\" \\"), _c('input', {
      attrs: {
        \\"id\\": \\"vue-demo-1336\\",
        \\"type\\": \\"checkbox\\"
      }
    }), _c('label', {
      attrs: {
        \\"for\\": \\"vue-demo-1336\\"
      }
    }), _vm._v(\\" \\"), _vm._m(24)], 1), _vm._v(\\" \\"), _c('p', [_vm._v(\\"问题来了，假如我真的只是想在页面中插入一个可交互的 tiny app，而不想展示源码，该怎么办？\\")]), _vm._v(\\" \\"), _vm._m(25), _vm._v(\\" \\"), _vm._m(26), _vm._v(\\" \\"), _c('p', [_vm._v(\\"效果如下：\\")]), _vm._v(\\" \\"), _c('div', {
      staticClass: \\"vue-demo-block vue-demo-block-demo-only\\"
    }, [_c('md2vuedemo2')], 1)]);
  };

  var _Z = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('h1', [_c('a', {
      attrs: {
        \\"href\\": \\"https://github.com/AngusFu/md2vue\\"
      }
    }, [_vm._v(\\"md2vue\\")])]);
  };

  var _a = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('p', [_vm._v(\\"最初灵感来自 \\"), _c('a', {
      attrs: {
        \\"href\\": \\"https://nuxtjs.org\\"
      }
    }, [_vm._v(\\"nuxt\\")]), _vm._v(\\"。\\")]);
  };

  var _b = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('blockquote', [_c('p', [_vm._v(\\"Markdown is a lightweight markup language with plain text formatting syntax. It is designed so that it can be converted to HTML and many other formats using a tool by the same name. —— \\"), _c('a', {
      attrs: {
        \\"href\\": \\"https://en.wikipedia.org/wiki/Markdown\\"
      }
    }, [_vm._v(\\"wikipedia\\")])])]);
  };

  var _d = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('ul', [_c('li', [_c('a', {
      attrs: {
        \\"href\\": \\"/remarkjs/remark\\"
      }
    }, [_vm._v(\\"remark\\")]), _vm._v(\\": Remark is an ecosystem of plugins for processing markdown.\\")]), _vm._v(\\" \\"), _c('li', [_c('a', {
      attrs: {
        \\"href\\": \\"https://github.com/isagalaev/highlight.js\\"
      }
    }, [_vm._v(\\"highlight.js\\")]), _vm._v(\\": Javascript syntax highlighter.\\")]), _vm._v(\\" \\"), _c('li', [_c('a', {
      attrs: {
        \\"href\\": \\"https://github.com/PrismJS/prism\\"
      }
    }, [_vm._v(\\"prism\\")]), _vm._v(\\": Javascript syntax highlighter.\\")]), _vm._v(\\" \\"), _c('li', [_c('a', {
      attrs: {
        \\"href\\": \\"https://github.com/vuejs/vueify\\"
      }
    }, [_vm._v(\\"vueify\\")]), _vm._v(\\": Browserify transform for single-file Vue components\\")]), _vm._v(\\" \\"), _c('li', [_c('a', {
      attrs: {
        \\"href\\": \\"https://github.com/rollup/rollup\\"
      }
    }, [_vm._v(\\"rollup\\")]), _vm._v(\\": Next-generation ES6 module bundler.\\")]), _vm._v(\\" \\"), _c('li', [_c('a', {
      attrs: {
        \\"href\\": \\"https://buble.surge.sh/\\"
      }
    }, [_vm._v(\\"buble\\")]), _vm._v(\\": The blazing fast, batteries-included ES2015 compiler.\\")])]);
  };

  var _e = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('ul', [_c('li', [_c('a', {
      attrs: {
        \\"href\\": \\"https://github.com/sindresorhus/github-markdown-css\\"
      }
    }, [_vm._v(\\"github-markdown-css\\")]), _vm._v(\\": The minimal amount of CSS to replicate the GitHub Markdown style.\\")]), _vm._v(\\" \\"), _c('li', [_c('a', {
      attrs: {
        \\"href\\": \\"https://github.com/isagalaev/highlight.js\\"
      }
    }, [_vm._v(\\"highlight.js\\")]), _vm._v(\\": Code highlighting.\\")]), _vm._v(\\" \\"), _c('li', [_c('a', {
      attrs: {
        \\"href\\": \\"https://github.com/PrismJS/prism\\"
      }
    }, [_vm._v(\\"prism\\")]), _vm._v(\\": Code highlighting.\\")])]);
  };

  var _f = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('pre', {
      pre: true,
      attrs: {
        \\"class\\": \\"lang-javascript\\"
      }
    }, [_c('code', [_c('span', {
      attrs: {
        \\"class\\": \\"token keyword\\"
      }
    }, [_vm._v(\\"import\\")]), _vm._v(\\" md2vue \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token keyword\\"
      }
    }, [_vm._v(\\"from\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token string\\"
      }
    }, [_vm._v(\\"'md2vue'\\")]), _vm._v(\\"\\\\n\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token comment\\"
      }
    }, [_vm._v(\\"// markdown 文本\\")]), _vm._v(\\"\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token keyword\\"
      }
    }, [_vm._v(\\"const\\")]), _vm._v(\\" markdownText \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token operator\\"
      }
    }, [_vm._v(\\"=\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token template-string\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token string\\"
      }
    }, [_vm._v(\\"\`...\`\\")])]), _vm._v(\\"\\\\n\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token comment\\"
      }
    }, [_vm._v(\\"// 配置\\")]), _vm._v(\\"\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token keyword\\"
      }
    }, [_vm._v(\\"const\\")]), _vm._v(\\" config \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token operator\\"
      }
    }, [_vm._v(\\"=\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n  target\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\":\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token string\\"
      }
    }, [_vm._v(\\"'js'\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\",\\")]), _vm._v(\\"\\\\n  name\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\":\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token string\\"
      }
    }, [_vm._v(\\"'common-comp'\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\",\\")]), _vm._v(\\"\\\\n  highlight\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\":\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token string\\"
      }
    }, [_vm._v(\\"'prism'\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\",\\")]), _vm._v(\\"\\\\n  inject\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\",\\")]), _vm._v(\\"\\\\n  extend\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")]), _vm._v(\\"\\\\n\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token comment\\"
      }
    }, [_vm._v(\\"// 返回 promise\\")]), _vm._v(\\"\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token keyword\\"
      }
    }, [_vm._v(\\"const\\")]), _vm._v(\\" content \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token operator\\"
      }
    }, [_vm._v(\\"=\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token keyword\\"
      }
    }, [_vm._v(\\"await\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token function\\"
      }
    }, [_vm._v(\\"md2vue\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"(\\")]), _vm._v(\\"markdownText\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\",\\")]), _vm._v(\\" config\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\")\\")])])]);
  };

  var _g = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('h4', [_c('code', [_vm._v(\\"config.target\\")])]);
  };

  var _i = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('p', [_vm._v(\\"字符串。可选址值为 \\"), _c('code', [_vm._v(\\"vue\\")]), _vm._v(\\" \\"), _c('code', [_vm._v(\\"js\\")]), _vm._v(\\"。默认为 \\"), _c('code', [_vm._v(\\"vue\\")]), _vm._v(\\"。\\")]);
  };

  var _j = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('p', [_vm._v(\\"使用 \\"), _c('code', [_vm._v(\\"vue\\")]), _vm._v(\\" 时，生成结果是一个 SFC（single file component）。这种情况下，你可以将内容写入到一个 \\"), _c('code', [_vm._v(\\".vue\\")]), _vm._v(\\" 文件中。\\")]);
  };

  var _k = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('p', [_vm._v(\\"使用 \\"), _c('code', [_vm._v(\\"js\\")]), _vm._v(\\" 时，则会进一步将 SFC 编译为 JavaScript。你可以将结果写到一个 \\"), _c('code', [_vm._v(\\".js\\")]), _vm._v(\\" 文件中，并像下面这样引用：\\")]);
  };

  var _l = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('pre', {
      pre: true,
      attrs: {
        \\"class\\": \\"lang-javascript\\"
      }
    }, [_c('code', [_c('span', {
      attrs: {
        \\"class\\": \\"token keyword\\"
      }
    }, [_vm._v(\\"const\\")]), _vm._v(\\" MyComponent \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token operator\\"
      }
    }, [_vm._v(\\"=\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token function\\"
      }
    }, [_vm._v(\\"require\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"(\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token string\\"
      }
    }, [_vm._v(\\"'my-component.js'\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\")\\")]), _vm._v(\\"\\\\n\\\\nVue\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\".\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token function\\"
      }
    }, [_vm._v(\\"use\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"(\\")]), _vm._v(\\"MyComponent\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\")\\")]), _vm._v(\\"\\\\n\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token keyword\\"
      }
    }, [_vm._v(\\"new\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token class-name\\"
      }
    }, [_vm._v(\\"Vue\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"(\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n  el\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\":\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token string\\"
      }
    }, [_vm._v(\\"'#app'\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\",\\")]), _vm._v(\\"\\\\n  template\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\":\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token string\\"
      }
    }, [_vm._v(\\"'<common-comp />'\\")]), _vm._v(\\"\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\")\\")])])]);
  };

  var _n = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('h4', [_c('code', [_vm._v(\\"config.name\\")])]);
  };

  var _o = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('p', [_vm._v(\\"字符串类型。注意，当 target 字段为 \\"), _c('code', [_vm._v(\\"js\\")]), _vm._v(\\" 时，必须配置此字段，表示 Vue 组件名称。\\")]);
  };

  var _p = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('h4', [_c('code', [_vm._v(\\"config.highlight\\")])]);
  };

  var _q = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('p', [_vm._v(\\"可选值 \\"), _c('code', [_vm._v(\\"highlight.js\\")]), _vm._v(\\" \\"), _c('code', [_vm._v(\\"prism\\")]), _vm._v(\\"。默认为 \\"), _c('code', [_vm._v(\\"highlight.js\\")]), _vm._v(\\"。\\")]);
  };

  var _r = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('p', [_vm._v(\\"当然，也可以传入一个函数，该函数接收两个参数：\\"), _c('code', [_vm._v(\\"code\\")]), _vm._v(\\", \\"), _c('code', [_vm._v(\\"language\\")])]);
  };

  var _s = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('h4', [_c('code', [_vm._v(\\"config.inject\\")])]);
  };

  var _t = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('h4', [_c('code', [_vm._v(\\"config.extend\\")])]);
  };

  var _u = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('pre', {
      pre: true,
      attrs: {
        \\"class\\": \\"lang-javascript\\"
      }
    }, [_c('code', [_vm._v(\\"extend\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\":\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n  \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token function\\"
      }
    }, [_vm._v(\\"created\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"(\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\")\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n    console\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\".\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token function\\"
      }
    }, [_vm._v(\\"log\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"(\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token string\\"
      }
    }, [_vm._v(\\"'created...'\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\")\\")]), _vm._v(\\"\\\\n  \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")]), _vm._v(\\"\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")])])]);
  };

  var _w = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('h4', [_c('code', [_vm._v(\\"config.remarkPlugins\\")])]);
  };

  var _x = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('p', [_c('code', [_vm._v(\\"config.remarkPlugins\\")]), _vm._v(\\" 为数组，其中每个元素都是一个 remark 插件函数。\\")]);
  };

  var _y = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('ol', [_c('li', [_c('p', [_vm._v(\\"所有语言类型设置为 \\"), _c('code', [_vm._v(\\"html\\")]), _vm._v(\\" 的代码块将会被视为可运行的 Vue demo\\")])]), _vm._v(\\" \\"), _c('li', [_c('p', [_vm._v(\\"如果你真的只是需要展示代码，请将语言设置为 \\"), _c('code', [_vm._v(\\"xml\\")])])])]);
  };

  var _z = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('pre', {
      pre: true,
      attrs: {
        \\"class\\": \\"lang-html\\"
      }
    }, [_c('code', [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"<\\")]), _vm._v(\\"style\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token attr-name\\"
      }
    }, [_vm._v(\\"lang\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token attr-value\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"=\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"\\\\\\"\\")]), _vm._v(\\"stylus\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"\\\\\\"\\")])]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _c('span', {
      attrs: {
        \\"class\\": \\"token style language-css\\"
      }
    }, [_vm._v(\\"\\\\n.wrapper\\\\n  input\\\\n    \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token property\\"
      }
    }, [_vm._v(\\"width\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\":\\")]), _vm._v(\\" 50px\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\";\\")]), _vm._v(\\"\\\\n    \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token property\\"
      }
    }, [_vm._v(\\"text-align\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\":\\")]), _vm._v(\\" center\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\";\\")]), _vm._v(\\"\\\\n\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"</\\")]), _vm._v(\\"style\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _vm._v(\\"\\\\n\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"<\\")]), _vm._v(\\"template\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token attr-name\\"
      }
    }, [_vm._v(\\"lang\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token attr-value\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"=\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"\\\\\\"\\")]), _vm._v(\\"pug\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"\\\\\\"\\")])]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _vm._v(\\"\\\\n.wrapper\\\\n  button(@click=\\\\\\"incr(-1)\\\\\\") -\\\\n  input(type=\\\\\\"text\\\\\\", readonly, :value=\\\\\\"count\\\\\\")\\\\n  button(@click=\\\\\\"incr(+1)\\\\\\") +\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"</\\")]), _vm._v(\\"template\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _vm._v(\\"\\\\n\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token comment\\"
      }
    }, [_vm._v(\\"<!--默认使用 buble 编译 JS-->\\")]), _vm._v(\\"\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"<\\")]), _vm._v(\\"script\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token attr-name\\"
      }
    }, [_vm._v(\\"lang\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token attr-value\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"=\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"\\\\\\"\\")]), _vm._v(\\"buble\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"\\\\\\"\\")])]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _c('span', {
      attrs: {
        \\"class\\": \\"token script language-javascript\\"
      }
    }, [_vm._v(\\"\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token keyword\\"
      }
    }, [_vm._v(\\"export\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token keyword\\"
      }
    }, [_vm._v(\\"default\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n  \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token function\\"
      }
    }, [_vm._v(\\"data\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"(\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\")\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n    \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token keyword\\"
      }
    }, [_vm._v(\\"return\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n      count\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\":\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token number\\"
      }
    }, [_vm._v(\\"0\\")]), _vm._v(\\"\\\\n    \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")]), _vm._v(\\"\\\\n  \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\",\\")]), _vm._v(\\"\\\\n  methods\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\":\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n    \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token function\\"
      }
    }, [_vm._v(\\"incr\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"(\\")]), _vm._v(\\"delta\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\")\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n      \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token keyword\\"
      }
    }, [_vm._v(\\"this\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\".\\")]), _vm._v(\\"count \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token operator\\"
      }
    }, [_vm._v(\\"+=\\")]), _vm._v(\\" delta\\\\n    \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")]), _vm._v(\\"\\\\n  \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")]), _vm._v(\\"\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")]), _vm._v(\\"\\\\n\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"</\\")]), _vm._v(\\"script\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])])])]);
  };

  var _10 = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('p', [_vm._v(\\"其实也可以偷懒，不写 \\"), _c('code', [_vm._v(\\"<template>\\")]), _vm._v(\\" 也是可以的。（这时候，template 的内容就是去掉 style 和 script 两部分之后剩余的内容。）示例如下：\\")]);
  };

  var _11 = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('pre', {
      pre: true,
      attrs: {
        \\"class\\": \\"lang-html\\"
      }
    }, [_c('code', [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"<\\")]), _vm._v(\\"style\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _c('span', {
      attrs: {
        \\"class\\": \\"token style language-css\\"
      }
    }, [_vm._v(\\"\\\\n  \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token selector\\"
      }
    }, [_vm._v(\\"button\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n    \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token property\\"
      }
    }, [_vm._v(\\"font-size\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\":\\")]), _vm._v(\\" 14px\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\";\\")]), _vm._v(\\"\\\\n  \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")]), _vm._v(\\"\\\\n\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"</\\")]), _vm._v(\\"style\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _vm._v(\\"\\\\n\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"<\\")]), _vm._v(\\"button\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token attr-name\\"
      }
    }, [_vm._v(\\"@click\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token attr-value\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"=\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"\\\\\\"\\")]), _vm._v(\\"click\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"\\\\\\"\\")])]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _vm._v(\\"click me!\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"</\\")]), _vm._v(\\"button\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _vm._v(\\"\\\\n\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"<\\")]), _vm._v(\\"script\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _c('span', {
      attrs: {
        \\"class\\": \\"token script language-javascript\\"
      }
    }, [_vm._v(\\"\\\\n  \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token keyword\\"
      }
    }, [_vm._v(\\"export\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token keyword\\"
      }
    }, [_vm._v(\\"default\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n    methods\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\":\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n      \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token function\\"
      }
    }, [_vm._v(\\"click\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"(\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\")\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n        \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token function\\"
      }
    }, [_vm._v(\\"alert\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"(\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token string\\"
      }
    }, [_vm._v(\\"'clicked!'\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\")\\")]), _vm._v(\\"\\\\n      \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")]), _vm._v(\\"\\\\n    \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")]), _vm._v(\\"\\\\n  \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")]), _vm._v(\\"\\\\n\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"</\\")]), _vm._v(\\"script\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])])])]);
  };

  var _12 = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('p', [_vm._v(\\"这时候，可以像下面一样，为 \\"), _c('code', [_vm._v(\\"<template>\\")]), _vm._v(\\" 添加一个 \\"), _c('code', [_vm._v(\\"demo-only\\")]), _vm._v(\\" 属性。\\")]);
  };

  var _13 = function () {
    var _vm = this;

    var _h = _vm.$createElement;

    var _c = _vm._self._c || _h;

    return _c('pre', {
      pre: true,
      attrs: {
        \\"class\\": \\"lang-xml\\"
      }
    }, [_c('code', [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"<\\")]), _vm._v(\\"style\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _c('span', {
      attrs: {
        \\"class\\": \\"token style language-css\\"
      }
    }, [_vm._v(\\"\\\\n  \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token selector\\"
      }
    }, [_vm._v(\\"button\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n    \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token property\\"
      }
    }, [_vm._v(\\"font-size\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\":\\")]), _vm._v(\\" 14px\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\";\\")]), _vm._v(\\"\\\\n  \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")]), _vm._v(\\"\\\\n\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"</\\")]), _vm._v(\\"style\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _vm._v(\\"\\\\n\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"<\\")]), _vm._v(\\"template\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token attr-name\\"
      }
    }, [_vm._v(\\"demo-only\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _vm._v(\\"\\\\n  \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"<\\")]), _vm._v(\\"button\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token attr-name\\"
      }
    }, [_vm._v(\\"@click\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token attr-value\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"=\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"\\\\\\"\\")]), _vm._v(\\"click\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"\\\\\\"\\")])]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _vm._v(\\"click me!\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"</\\")]), _vm._v(\\"button\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _vm._v(\\"\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"</\\")]), _vm._v(\\"template\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _vm._v(\\"\\\\n\\\\n\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"<\\")]), _vm._v(\\"script\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])]), _c('span', {
      attrs: {
        \\"class\\": \\"token script language-javascript\\"
      }
    }, [_vm._v(\\"\\\\n  \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token keyword\\"
      }
    }, [_vm._v(\\"export\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token keyword\\"
      }
    }, [_vm._v(\\"default\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n    methods\\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\":\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n      \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token function\\"
      }
    }, [_vm._v(\\"click\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"(\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\")\\")]), _vm._v(\\" \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"{\\")]), _vm._v(\\"\\\\n        \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token function\\"
      }
    }, [_vm._v(\\"alert\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"(\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token string\\"
      }
    }, [_vm._v(\\"'clicked!'\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\")\\")]), _vm._v(\\"\\\\n      \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")]), _vm._v(\\"\\\\n    \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")]), _vm._v(\\"\\\\n  \\"), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"}\\")]), _vm._v(\\"\\\\n\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token tag\\"
      }
    }, [_c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\"</\\")]), _vm._v(\\"script\\")]), _c('span', {
      attrs: {
        \\"class\\": \\"token punctuation\\"
      }
    }, [_vm._v(\\">\\")])])])]);
  };

  var _17 = function (css) {
    if (typeof window === 'undefined' || typeof document === 'undefined') return;
    var elem = document.createElement('style');
    elem.setAttribute('type', 'text/css');
    elem.innerHTML = css;
    var head = document.getElementsByTagName('head')[0];
    head.appendChild(elem);
    return function () {
      head.removeChild(elem);
    };
  };

  var _14 = function () {
    var css = \\".wrapper input[data-v-029571ac] {\\\\n  width: 50px;\\\\n  text-align: center;\\\\n}\\\\nbutton[data-v-029571ad] {\\\\n  font-size: 14px;\\\\n}\\\\nbutton[data-v-029571ae] {\\\\n  font-size: 14px;\\\\n}\\";
    this.__clean = _17(css);
  };

  var _15 = function () {
    this.__clean();
  };

  var _16 = function (Vue) {
    Vue.component(_3.name, _3);
  };

  var _9 = {
    inserted: _Q
  };
  var _8 = {
    \\"effect-only\\": _9
  };
  var _C = {
    incr: _S
  };
  var _D = [];
  var _B = {
    data: _R,
    methods: _C,
    render: _T,
    staticRenderFns: _D,
    _scopeId: \\"data-v-029571ac\\"
  };
  var _G = {
    click: _U
  };
  var _H = [];
  var _F = {
    methods: _G,
    render: _V,
    staticRenderFns: _H,
    _scopeId: \\"data-v-029571ad\\"
  };
  var _K = {
    click: _W
  };
  var _L = [];
  var _J = {
    methods: _K,
    render: _X,
    staticRenderFns: _L,
    _scopeId: \\"data-v-029571ae\\"
  };
  var _A = {
    md2vuedemo0: _B,
    md2vuedemo1: _F,
    md2vuedemo2: _J
  };
  var _N = [_Z, _a, _b, _d, _e, _f, _g, _i, _j, _k, _l, _n, _o, _p, _q, _r, _s, _t, _u, _w, _x, _y, _z, _10, _11, _12, _13];
  var _3 = {
    head: _P,
    layout: \\"component\\",
    directives: _8,
    components: _A,
    render: _Y,
    staticRenderFns: _N,
    name: \\"my-comp\\",
    created: _14,
    destroyed: _15,
    install: _16
  };
  _$1.MyComp = _3;

}).call(__proxy);

var component = __proxy.MyComp;
typeof exports === 'object' && typeof module !== 'undefined' && (module.exports = component);
typeof window !== 'undefined' && window.Vue && Vue.use(component);
"
`;
